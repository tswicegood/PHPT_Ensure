Prior to v0.1
-------------
* Add basic Expectations:
    * [DONE] Equals
    * [DONE] NotEquals
    * [DONE] Is / Identical
    * [DONE] IsNot / NotIdentical
    * [DONE] Pattern
    * [DONE] NoPattern
    * [DONE] GreaterThan
    * [DONE] NotGreaterThan
    * [DONE] LesserThan
    * [DONE] NotLesserThan
    * [DONE] GreaterThanOrEqual / NotGreaterThanOrEqual
    * [DONE] LesserThanOrEqual / NotLesserThanOrEqual
    * [DONE] Between
    * [DONE] NotBetween
* [DONE] Refactor the way notifications are printed.
* [DONE] Add messages to all expectations

Prior to v0.2
-------------
* Clean up output messages
    * Add full diff capabilities when an expectation fails
    * Create intelligent "diff" of an array such as:
        - array[0]['foo'] => 'bar' was not expected
        - array[0][1] is not equal to 'foobar'
* Add Type / A / An Expectation
* Add NotType / NotA / NotAn Expectation
* Clean up pattern dumping and remove escape values


Floating tasks
--------------
* Add Either/Neither expectations:
    ensure('foo')->either(array(
        'type' => 'string',
        'equals' => 'foo'
    ));
    ensure('foo')->neither(array(
        'type' => 'int',
        'equals' => 'bar
    ));
    ensure('joeuser')->either(array(
        'canLogin' => 'some password',
        'canRegister' => array('some password', array('first_name' => 'Joe', 'last_name' => 'User'))
    )); // is like:
    ensure('joeuser')->canLogin('some password') or
    ensure('joeuser')->canRegister('some password', array('first_name' => 'Joe', 'last_name' => 'User'))
