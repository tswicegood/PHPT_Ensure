Prior to v0.1
-------------
* Add basic Expectations:
    * [DONE] Equals
    * [DONE] NotEquals
    * [DONE] Is / Identical
    * [DONE] IsNot / NotIdentical
    * [DONE] Pattern
    * [DONE] NoPattern
    * [DONE] GreaterThan
    * [DONE] NotGreaterThan
    * [DONE] LesserThan
    * [DONE] NotLesserThan
    * [DONE] GreaterThanOrEqual / NotGreaterThanOrEqual
    * [DONE] LesserThanOrEqual / NotLesserThanOrEqual
    * Between
    * NotBetween
    * Type / A / An
    * NotType / NotA / NotAn
* Refactor the way notifications are printed.
    * Add Ensure_Policy_Verifier($reporter) to handle verification and reporting
    * Change ensure($value) to ensure($value, PHPT_Ensure_Reporter $reporter = null)
    * If ensure('foo', null), use PHPT_Ensure_Registry()->opts['ensure_reporter'] to determine
      the default

Floating tasks
--------------
* Add Either/Neither expectations:
    ensure('foo')->either(array(
        'type' => 'string',
        'equals' => 'foo'
    ));
    ensure('foo')->neither(array(
        'type' => 'int',
        'equals' => 'bar
    ));
    ensure('joeuser')->either(array(
        'canLogin' => 'some password',
        'canRegister' => array('some password', array('first_name' => 'Joe', 'last_name' => 'User'))
    )); // is like:
    ensure('joeuser')->canLogin('some password') or
    ensure('joeuser')->canRegister('some password', array('first_name' => 'Joe', 'last_name' => 'User'))
