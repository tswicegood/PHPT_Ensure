<?xml version="1.0" encoding="UTF-8"?>
<project name="PHPT_Ensure" basedir="." default="make">
    <taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2" />
    
    <property name="version" value="0.1.1alpha" />
    <property name="package_name" value="PHPT_Ensure" />
    <property name="channel" value="channel.phpt.info" />
    
    <target name="clean">
        <delete dir="./build/package" />
        <delete dir="./build/export" />
        <delete file="./${package_name}-${version}.tgz" />
        
        <mkdir dir="./build/package" />
    </target>
        
    <target name="export" depends="clean">
        <echo msg="Exporting SVN files" />
        <exec command="svn export ./src ./build/export" />
        
        <copy todir="./build/package">
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset dir="./build/export">
                <include name="PHPT*/**" />
            </fileset>
        </copy>
    </target>
    
    <target name="build" depends="export">
        <phingcall target="build.package" />
    </target>

    <target name="export.git" depends="clean">
        <echo msg="Creating copy of git contents" />
         <copy todir="./build/package">
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset dir="./src">
                <include name="PHPT*/**" />
            </fileset>
            <fileset dir="./">
                <include name="scripts/**" />
            </fileset>
        </copy>
    </target>

    <target name="build.git" depends="export.git">
        <phingcall target="build.package" />
    </target>

    <target name="build.package">
        <d51pearpkg2 dir="./build/package" baseinstalldir="/">
            <name>${package_name}</name>
            <summary>PHPT_Ensure provides the ensure() function for testing expectations</summary>
            <channel>${channel}</channel>
            <description indentions_to_remove="16">
                <!--        Don't exceed this width         -->
                PHPT_Ensure provides an expectation parser that
                can be used to replace assert() function calls
                with a more fluent, understandable call.
                  assert('"foo" == "foo"');
                Becomes:
                  ensure('foo')->equals('foo');
            </description>
            
            <lead user="tswicegood" name="Travis Swicegood" email="developer@domain51.com" />
            <license>LGPL/CDDL</license>
            
            <version release="${version}" api="1.0" />
            <stability release="alpha" api="alpha" />
            
            <dependencies>
                <php minimum_version="5.2.0" />
                
                <pear minimum_version="1.6.0" />

                <package name="PHPT_Core"
                         minimum_version="0.1.1alpha"
                         channel="channel.phpt.info"
                         type="required" />
            </dependencies>
            
            <changelog version="0.1.1alpha" date="2008-03-25">
                <!--        Don't exceed this width         -->
                The second alpha release of PHPT_Ensure.  The
                following changes were made:

                * Remove Expectation->status in favor of 
                  explicit getStatus() which can be specified
                  in the interface
                * Remove Expectation->message in favor of
                  explicit getDescription() which can be
                  specified in the interface
                * Removes all of the old Violation code
                * Keep _expectation on SimpleExpectation if
                  no value was provided
                * Change expectations to work without having to
                  have one or more argument
                * Add isTrue() / isNotTrue() and aliases to
                  allow without "is" prefix
                * Add isFalse() / isNotFalse() and aliases to
                  allow without "is" prefix
            </changelog>

            <changelog version="0.1alpha" date="2007-10-19">
                This is the initial alpha release of this package
            </changelog>
        </d51pearpkg2>
    </target>
    
     <target name="make" depends="build">
        <phingcall target="make.package" />
    </target>

    <target name="make.git" depends="build.git">
        <phingcall target="make.package" />
    </target>

    <target name="make.package">
        <echo msg="Creating PEAR archive file for ${package_name}" />
        <mkdir dir="./build/package/${package_name}-${version}" />
        <copy todir="./build/package/${package_name}-${version}">
            <fileset dir="./build/package">
                <include name="PHPT/**/**" />
                <include name="scripts*/**" />
            </fileset>
        </copy>
        <delete dir="./build/package/PHPT" />
        <tar compression="gzip" destfile="${package_name}-${version}.tgz" basedir="./build/package" />
    </target>
    
    <target name="docs" depends="export">
        <echo msg="Creating documentation" />
        <phpdoc title="${package_name} Docs" 
            destdir="./apidocs"
            sourcecode="./build"
            output="HTML:frames:DOM/earthli"
        >
            <fileset dir="./build/export">
                <include name="**" />
            </fileset>
        </phpdoc>
    </target>
</project>
